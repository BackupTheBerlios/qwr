SHELL = /bin/sh
VPATH = @srcdir@

subdirs = GUI
top_srcdir = @top_srcdir@
srcdir = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = $(exec_prefix)/bin
infodir = $(prefix)/info
libdir = $(prefix)/lib/
mandir = $(prefix)/man/man1
incdir = $(prefix)/include

CC = @CC@
CXX = @CXX@
UIC = @UIC@
MOC = @MOC@
CPPFLAGS = @CPPFLAGS@
CFLAGS = $(CPPFLAGS) @CFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
INSTALL = @INSTALL@
QTPATH = @QTPATH@
VERS = @VERSION@

SOURCES := $(wildcard GUI/*.cpp) $(wildcard GUI/*.h) $(wildcard GUI/*.ui)\
	   $(wildcard esystem/*.cpp) $(wildcard esystem/*.h) \
	   $(wildcard backend/*.cpp) $(wildcard backend/*.h)

OTHERFILES := README TODO AUTHORS config.h.in aclocal.m4 configure Makefile.in \
	GUI/Makefile.in install-sh COPYING.GPL esystem/COPYING.LGPL GUI/GUIfiles.src

all:
	@for dir in ${subdirs}; do \
	  (cd $$dir && $(MAKE) all) \
	  || case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

install:
	@for dir in ${subdirs}; do \
	  (cd $$dir && $(MAKE) install) \
	  || case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

clean:
	/bin/rm -rf *~ GUI/*~ 
	@for dir in ${subdirs}; do \
	  (cd $$dir && $(MAKE) clean) \
	  || case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

distclean: clean
	/bin/rm -f Makefile config.h config.status config.cache config.log
	@for dir in ${subdirs}; do \
	  (cd $$dir && $(MAKE) distclean) \
	  || case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

# a rule to make snapshots
snapshot: $(SOURCES) $(OTHERFILES)
	@echo
	@echo "->Note: The version for now is hacked into Makefile.in as"
	@echo "->" $(VERS)
	@echo
	@echo "->copying all release files to the directory " qwr-$(VERS)
	@echo
	tar cf - $(SOURCES) $(OTHERFILES) | gzip > qwr-$(VERS).tar.gz
	mkdir -p qwr-$(VERS)
	mkdir -p qwr-$(VERS)/ext
	tar xzf qwr-$(VERS).tar.gz -C qwr-$(VERS) 
	/bin/rm -f qwr-$(VERS).tar.gz
	@echo
	@echo "->making the compressed tar file " qwr-$(VERS).tar.gz
	@echo
	tar cf - qwr-$(VERS) | gzip > qwr-$(VERS).tar.gz
	tar cf - qwr-$(VERS) | bzip2 > qwr-$(VERS).tar.bz2
	@echo
	echo "->removnig the temporary directory " qwr-$(VERS)
	/bin/rm -rf qwr-$(VERS)             # remove the old directory

# automatic re-running of configure if the ocnfigure.in file has changed
${srcdir}/configure: configure.ac 
	cd ${srcdir} && autoconf

# autoheader might not change config.h.in, so touch a stamp file
#${srcdir}/config.h.in: stamp-h.in
#${srcdir}/stamp-h.in: configure.ac 
#	cd ${srcdir} && autoheader
#	echo timestamp > ${srcdir}/stamp-h.in

#config.h: stamp-h
#stamp-h: config.h.in config.status
#	./config.status
#Makefile: Makefile.in config.status
#	./config.status
#config.status: configure
#	./config.status --recheck

.PHONY: QtWebRec install snapshot clean all
